Atomic:
  通常情况下，在Java里面，++i或者--i不是线程安全的，
  这里面有三个独立的操作：
      1.获取变量当前值，
      2.为该值+1/-1，
      3.然后写回新的值。
 在没有额外资源可以利用的情况下，只能使用加锁才能保证读-改-写这三个操作时“原子性”的。
 
 
 volatile语义以及指令重排序
 volatile 有2条语义
 1.保证线程间变量的可见性，简单的来说就是当前线程A对变量X进行修改之后，在A线程之后执行的线程能够看到变量X的改变。
 	a.这条语义要保证线程对变量修改之后要立刻写到主存里面。
 	b.线程对变量的值进行读取时要从主存中读取，而不是JVM的引用缓存中读取
 	
这里涉及到JVM的内存模型，在此进行简单描述，JAVA 为了保证其夸平台性，是JAVA应用程序与程序操作系统内存模型隔开，定义了自己的内存模型
在JAVA	内存模型中，内存分为主内存和工作内存	 	
 
